        -:    0:Source:testme.c
        -:    0:Graph:testme.gcno
        -:    0:Data:testme.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <string.h>
        -:    3:#include <stdlib.h>
        -:    4:#include <time.h>
        -:    5:
        -:    6:const char *all = " !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
        -:    7:
        -:    8:const int maxTime = 5;
function inputChar called 5994 returned 100% blocks executed 100%
     5994:    9:char inputChar()
        -:   10:{
        -:   11:  // TODO: rewrite this function
     5994:   12:  int chosen = rand() % 96;
call    0 returned 5994
     5994:   13:  return all[chosen];
        -:   14:}
        -:   15:
function inputString called 1009 returned 100% blocks executed 100%
     1009:   16:char *inputString()
        -:   17:{
        -:   18:  // TODO: rewrite this function
     1009:   19:  if (rand() % 101 >= 99)
call    0 returned 1009
branch  1 taken 12 (fallthrough)
branch  2 taken 997
        -:   20:  {
       12:   21:    return "reset";
        -:   22:  }
      997:   23:  char *generated = NULL;
      997:   24:  int length = 5;
      997:   25:  generated = malloc(sizeof(char) * (length + 1));
     5982:   26:  for (int i = 0; i < length; i++)
branch  0 taken 4985
branch  1 taken 997 (fallthrough)
        -:   27:  {
     4985:   28:    generated[i] = inputChar();
call    0 returned 4985
        -:   29:  }
      997:   30:  return generated;
        -:   31:}
        -:   32:
function testme called 1 returned 100% blocks executed 100%
        1:   33:void testme()
        -:   34:{
        1:   35:  int tcCount = 0;
        -:   36:  char *s;
        -:   37:  char c;
        1:   38:  int state = 0;
        1:   39:  int keep = 1;
     1011:   40:  while (keep)
branch  0 taken 1009
branch  1 taken 1 (fallthrough)
        -:   41:  {
     1009:   42:    tcCount++;
     1009:   43:    c = inputChar();
call    0 returned 1009
     1009:   44:    s = inputString();
call    0 returned 1009
     1009:   45:    printf("Iteration %d: c = %c, s = %s, state = %d\n", tcCount, c, s, state);
call    0 returned 1009
        -:   46:
     1009:   47:    if (c == '[' && state == 0)
branch  0 taken 12 (fallthrough)
branch  1 taken 997
branch  2 taken 1 (fallthrough)
branch  3 taken 11
        1:   48:      state = 1;
     1009:   49:    if (c == '(' && state == 1)
branch  0 taken 6 (fallthrough)
branch  1 taken 1003
branch  2 taken 1 (fallthrough)
branch  3 taken 5
        1:   50:      state = 2;
     1009:   51:    if (c == '{' && state == 2)
branch  0 taken 13 (fallthrough)
branch  1 taken 996
branch  2 taken 1 (fallthrough)
branch  3 taken 12
        1:   52:      state = 3;
     1009:   53:    if (c == ' ' && state == 3)
branch  0 taken 9 (fallthrough)
branch  1 taken 1000
branch  2 taken 1 (fallthrough)
branch  3 taken 8
        1:   54:      state = 4;
     1009:   55:    if (c == 'a' && state == 4)
branch  0 taken 9 (fallthrough)
branch  1 taken 1000
branch  2 taken 1 (fallthrough)
branch  3 taken 8
        1:   56:      state = 5;
     1009:   57:    if (c == 'x' && state == 5)
branch  0 taken 16 (fallthrough)
branch  1 taken 993
branch  2 taken 1 (fallthrough)
branch  3 taken 15
        1:   58:      state = 6;
     1009:   59:    if (c == '}' && state == 6)
branch  0 taken 6 (fallthrough)
branch  1 taken 1003
branch  2 taken 1 (fallthrough)
branch  3 taken 5
        1:   60:      state = 7;
     1009:   61:    if (c == ')' && state == 7)
branch  0 taken 6 (fallthrough)
branch  1 taken 1003
branch  2 taken 1 (fallthrough)
branch  3 taken 5
        1:   62:      state = 8;
     1009:   63:    if (c == ']' && state == 8)
branch  0 taken 10 (fallthrough)
branch  1 taken 999
branch  2 taken 1 (fallthrough)
branch  3 taken 9
        1:   64:      state = 9;
     1009:   65:    if (s[0] == 'r' && s[1] == 'e' && s[2] == 's' && s[3] == 'e' && s[4] == 't' && s[5] == '\0' && state == 9)
branch  0 taken 26 (fallthrough)
branch  1 taken 983
branch  2 taken 12 (fallthrough)
branch  3 taken 14
branch  4 taken 12 (fallthrough)
branch  5 taken 0
branch  6 taken 12 (fallthrough)
branch  7 taken 0
branch  8 taken 12 (fallthrough)
branch  9 taken 0
branch 10 taken 12 (fallthrough)
branch 11 taken 0
branch 12 taken 1 (fallthrough)
branch 13 taken 11
        -:   66:    {
        1:   67:      printf("error ");
call    0 returned 1
        1:   68:      keep = 0;
        -:   69:    }
        -:   70:  }
        1:   71:}
        -:   72:
function main called 1 returned 100% blocks executed 100%
        1:   73:int main(int argc, char *argv[])
        -:   74:{
        1:   75:  srand(time(NULL));
call    0 returned 1
call    1 returned 1
        1:   76:  testme();
call    0 returned 1
        1:   77:  return 0;
        -:   78:}
